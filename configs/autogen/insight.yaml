Description: "\nStreamlit cloud formation template to create a single EC2 instance\
  \ in a new VPC.\n**WARNING** This template creates an Amazon EC2 instance. You will\
  \ be billed\nfor the AWS resources used if you create a stack from this template.\n"
Mappings:
  RegionMap:
    ap-northeast-1:
      AMI: ami-031ce7af929321d3a
    ap-southeast-1:
      AMI: ami-09dfb1478dc499b95
    eu-west-1:
      AMI: ami-0827ddd2d8e38aa56
    sa-east-1:
      AMI: ami-0a28b3352c3479371
    us-east-1:
      AMI: ami-0f9e8c4a1305ecd22
    us-west-1:
      AMI: ami-01eeae51446aeffdb
    us-west-2:
      AMI: ami-0d0ff0945ae093aea
Outputs:
  SshCommand:
    Description: SshCommand
    Value: !Join
      - ''
      - - ssh ubuntu@
        - !GetAtt 'Ec2Instance.PublicIp'
  SshIp:
    Description: SshIp
    Value: !GetAtt 'Ec2Instance.PublicIp'
  StreamlitEndpoint:
    Description: Streamlit endpoint
    Value: !Join
      - ''
      - - !GetAtt 'Ec2Instance.PublicIp'
        - :8501
Parameters:
  Ec2InstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m4.large
      - c4.large
      - r3.large
      - p2.xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
    Default: t2.medium
    Description: EC2 Instance Type
    Type: String
  SshKeyName:
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  SshLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: '0.0.0.0/0'
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    MaxLength: '18'
    MinLength: '9'
    Type: String
  SubnetId:
    Description: Subnet ID to use
    Type: AWS::EC2::Subnet::Id
  VpcId:
    Description: VPC ID to use
    Type: AWS::EC2::VPC::Id
Resources:
  Ec2Instance:
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref 'Ec2InstanceType'
      KeyName: !Ref 'SshKeyName'
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeleteOnTermination: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref 'Ec2InstanceSecurityGroup'
          SubnetId: !Ref 'SubnetId'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: !Sub 'Streamlit EC2 Instance (${AWS::StackName})'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash\n"
            - "echo -e '#!/bin/sh\necho Streamlit is still installing. Please try\
              \ again in a few minutes.\n' > /usr/local/bin/streamlit \n"
            - "chmod +x /usr/local/bin/streamlit \n"
            - "install -o ubuntu -g ubuntu -m 755 -d ~ubuntu/sshfs \n"
            - "/home/ubuntu/anaconda3/bin/pip install streamlit \n"
            - "curl -o /usr/local/bin/rmate https://raw.githubusercontent.com/aurora/rmate/master/rmate\
              \ \n"
            - "chmod +x /usr/local/bin/rmate \n"
            - "rm -f /usr/local/bin/streamlit \n"
            - "ln -fs /home/ubuntu/anaconda3/bin/streamlit /usr/local/bin/streamlit\
              \ \n"
            - "curl -o /tmp/config.toml http://streamlit.io/cf/config.toml \n"
            - "install -m 755 -o ubuntu -g ubuntu -d ~ubuntu/.streamlit \n"
            - "install -m 600 -o ubuntu -g ubuntu -t ~ubuntu/.streamlit /tmp/config.toml\
              \ \n"
    Type: AWS::EC2::Instance
  Ec2InstanceSecurityGroup:
    Properties:
      GroupDescription: Enable Streamlit access via port 8501 and SSH access via port
        22
      SecurityGroupIngress:
        - CidrIp: !Ref 'SshLocation'
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp: !Ref 'SshLocation'
          FromPort: '8501'
          IpProtocol: tcp
          ToPort: '8501'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: !Sub 'Streamlit Security Group (${AWS::StackName})'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
  IPAddress:
    Properties:
      Domain: vpc
      InstanceId: !Ref 'Ec2Instance'
    Type: AWS::EC2::EIP
